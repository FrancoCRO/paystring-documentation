(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{100:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return y}));var n=r(0),a=r.n(n);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function d(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):d(d({},t),e)),r},l=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),l=p(r),b=n,y=l["".concat(i,".").concat(b)]||l[b]||u[b]||s;return r?a.a.createElement(y,d(d({ref:t},c),{},{components:r})):a.a.createElement(y,d({ref:t},c))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,i=new Array(s);i[0]=b;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:n,i[1]=d;for(var c=2;c<s;c++)i[c]=r[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},87:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return d})),r.d(t,"rightToc",(function(){return o})),r.d(t,"default",(function(){return p}));var n=r(2),a=r(7),s=(r(0),r(100)),i={id:"payid-interfaces",title:"Interfaces",sidebar_label:"Interfaces"},d={unversionedId:"payid-interfaces",id:"payid-interfaces",isDocsHomePage:!1,title:"Interfaces",description:"See also: PayID API Reference.",source:"@site/docs/payid-interfaces.md",permalink:"/payid-documentation/review-apps/loisrp-networks/09a7da/payid-interfaces",editUrl:"https://github.com/payid-org/payid-documentation/tree/master/docs/payid-interfaces.md",sidebar_label:"Interfaces",sidebar:"docs",previous:{title:"Headers",permalink:"/payid-documentation/review-apps/loisrp-networks/09a7da/payid-headers"},next:{title:"Schemas",permalink:"/payid-documentation/review-apps/loisrp-networks/09a7da/payid-schemas"}},o=[{value:"PaymentInformation type",id:"paymentinformation-type",children:[]},{value:"AddressDetailsType",id:"addressdetailstype",children:[]},{value:"CryptoAddressDetails",id:"cryptoaddressdetails",children:[]},{value:"FiatAddressDetails",id:"fiataddressdetails",children:[]},{value:"Address",id:"address",children:[]}],c={rightToc:o};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"See also: ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://api.payid.org"}),"PayID API Reference"),"."),Object(s.b)("p",null,"The PayID protocol includes the following interface definitions."),Object(s.b)("h3",{id:"paymentinformation-type"},"PaymentInformation type"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"interface PaymentInformation {\n  addresses: Address[]\n  payId?: string\n  memo?: string\n}\n")),Object(s.b)("h3",{id:"addressdetailstype"},"AddressDetailsType"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"enum AddressDetailsType {\n  CryptoAddress = 'CryptoAddressDetails'\n  FiatAddress = 'FiatAddressDetails'\n}\n")),Object(s.b)("h3",{id:"cryptoaddressdetails"},"CryptoAddressDetails"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"interface CryptoAddressDetails {\n  address: string\n  tag?: string\n}\n")),Object(s.b)("h3",{id:"fiataddressdetails"},"FiatAddressDetails"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"interface FiatAddressDetails {\n  accountNumber: string\n  routingNumber?: string\n}\n")),Object(s.b)("h3",{id:"address"},"Address"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"interface Address {\n  paymentNetwork: string\n  environment?: string\n  addressDetailsType: AddressDetailsType\n  addressDetails: CryptoAddressDetails | FiatAddressDetails\n}\n")))}p.isMDXComponent=!0}}]);